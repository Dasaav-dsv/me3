name: 'Hello World'
description: 'Greet someone'
inputs:
  who-to-greet: # id of input
    description: 'Who to greet'
    required: true
    default: 'World'
outputs:
  random-number:
    description: 'Random number'
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: 'composite'
  steps:
    - name: Install WINE + LLVM + Mingw-w64
      shell: bash
      run: |
        sudo dpkg --add-architecture i386
        wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
        sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
        sudo apt install --install-recommends winehq-stable lld clang-tools llvm
        sudo apt install --no-install-suggests mingw-w64-x86-64-dev

    - name: Generate x86_64-pc-windows-gnullvm configuration
      shell: bash
      run: |
        {
            CL_FLAGS="-Wno-unused-command-line-argument -fuse-ld=lld-link"

            echo "AR_x86_64_pc_windows_gnullvm=llvm-ar"
            echo "CFLAGS_x86_64_pc_windows_gnullvm=$CL_FLAGS"
            echo "CXXFLAGS_x86_64_pc_windows_gnullvm=$CL_FLAGS /EHsc"
            echo "CC_x86_64_pc_windows_gnullvm=clang"
            echo "CXX_x86_64_pc_windows_gnullvm=clang"
        } >>"$GITHUB_ENV"

        cat >~/.cargo/config.toml <<EOF
        [target.x86_64-pc-windows-gnullvm]
        linker = "lld"
        runner = ["env", "WINEDEBUG=-all", "wine"]
        rustflags = [
            "-C",
            "target-feature=+crt-static",
            "--cfg", "windows_raw_dylib",
            "--cfg", "windows_debugger_visualizer"
        ]
        EOF
